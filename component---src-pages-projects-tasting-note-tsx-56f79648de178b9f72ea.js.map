{"version":3,"sources":["webpack:///./src/pages/projects/tasting-note.tsx","webpack:///./src/pages/projects/styles.module.scss"],"names":["TastingNotePage","render","react__WEBPACK_IMPORTED_MODULE_3__","_components_project_layout__WEBPACK_IMPORTED_MODULE_5__","allProjects","this","props","data","edges","map","e","node","currentProject","project","mainImage","childImageSharp","sizes","reactstrap__WEBPACK_IMPORTED_MODULE_4__","className","lg","sharedStyles","src","getImageUrl","alt","filename","withPrefix","imageFolder","React","pageQuery","module","exports","imageTitle"],"mappings":"qPAOqBA,oGAIZC,kBACL,OACEC,EAAA,cAACC,EAAA,EAAD,CACEC,YAAaC,KAAKC,MAAMC,KAAKH,YAAYI,MAAMC,IAAI,SAAAC,GAAC,OAAIA,EAAEC,OAC1DC,eAAgBP,KAAKC,MAAMC,KAAKM,QAAQL,MAAM,GAAGG,KACjDG,UAAWT,KAAKC,MAAMC,KAAKO,UAAUC,gBAAgBC,OAErDd,EAAA,cAACe,EAAA,EAAD,KACEf,EAAA,cAACe,EAAA,EAAD,CAAKC,UAAU,0BACbhB,EAAA,cAACe,EAAA,EAAD,CAAKE,GAAG,MACNjB,EAAA,sCACAA,EAAA,6QAOAA,EAAA,8WAUJA,EAAA,cAACe,EAAA,EAAD,CAAKC,UAAU,0BACbhB,EAAA,cAACe,EAAA,EAAD,CAAKE,GAAG,KACNjB,EAAA,mBAAGgB,UAAWE,cAAd,sCAGAlB,EAAA,qBACEmB,IAAKhB,KAAKiB,YAAY,YACtBC,IAAI,+BACJL,UAAU,gBAIhBhB,EAAA,cAACe,EAAA,EAAD,CAAKC,UAAU,0BACbhB,EAAA,cAACe,EAAA,EAAD,CAAKE,GAAG,MACNjB,EAAA,oCACAA,EAAA,4MAIEA,EAAA,yDAEFA,EAAA,8PASJA,EAAA,cAACe,EAAA,EAAD,CAAKC,UAAU,0BACbhB,EAAA,cAACe,EAAA,EAAD,CAAKE,GAAG,MACNjB,EAAA,wCACAA,EAAA,6TAOAA,EAAA,cAACe,EAAA,EAAD,CAAKC,UAAU,0BACbhB,EAAA,cAACe,EAAA,EAAD,CAAKE,GAAG,KACNjB,EAAA,qBACEmB,IAAKhB,KAAKiB,YAAY,eACtBC,IAAI,eACJL,UAAU,kBAOpBhB,EAAA,cAACe,EAAA,EAAD,CAAKC,UAAU,+BACbhB,EAAA,cAACe,EAAA,EAAD,CAAKE,GAAG,MACNjB,EAAA,sCACAA,EAAA,sFACAA,EAAA,wBACEA,EAAA,iIAIAA,EAAA,yBAEAA,EAAA,sMAKAA,EAAA,yBACAA,EAAA,8SAgBFA,EAAA,cAACe,EAAA,EAAD,CAAKC,UAAU,0BACbhB,EAAA,cAACe,EAAA,EAAD,KACEf,EAAA,qBACEmB,IAAKhB,KAAKiB,YAAY,kBACtBC,IAAI,0BACJL,UAAU,kBAOpBhB,EAAA,cAACe,EAAA,EAAD,CAAKC,UAAU,+BACbhB,EAAA,cAACe,EAAA,EAAD,CAAKE,GAAG,MACNjB,EAAA,mCACAA,EAAA,cAACe,EAAA,EAAD,CAAKC,UAAU,0BACbhB,EAAA,cAACe,EAAA,EAAD,CAAKE,GAAG,MACNjB,EAAA,qBACEmB,IAAKhB,KAAKiB,YAAY,YACtBC,IAAI,0BACJL,UAAU,uBAWpBI,qBAAYE,GAClB,OAAOC,qBAAU,WACJpB,KAAKC,MAAMC,KAAKM,QAAQL,MAAM,GAAGG,KAAKe,YADlC,IACiDF,OAtJzBG,aA2JhCC,EAAS,kCCjKtBC,EAAAC,QAAA,CAAkBC,WAAA","file":"component---src-pages-projects-tasting-note-tsx-56f79648de178b9f72ea.js","sourcesContent":["import { graphql, withPrefix } from \"gatsby\";\r\nimport * as React from \"react\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport { ProjectLayout } from \"../../components/project-layout\";\r\nimport { ProjectPageProps } from \"../../models/project-page-props\";\r\nimport * as sharedStyles from \"./styles.module.scss\";\r\n\r\nexport default class TastingNotePage extends React.Component<\r\n  ProjectPageProps,\r\n  {}\r\n> {\r\n  public render() {\r\n    return (\r\n      <ProjectLayout\r\n        allProjects={this.props.data.allProjects.edges.map(e => e.node)}\r\n        currentProject={this.props.data.project.edges[0].node}\r\n        mainImage={this.props.data.mainImage.childImageSharp.sizes}\r\n      >\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"10\">\r\n              <h3>Background</h3>\r\n              <p>\r\n                LCBO is one of the world's largest alcoholic beverage\r\n                purchasers, there are numbers of new products need to be\r\n                evaluated each year. As a result, product consultants meet 3\r\n                times a year to sample and document tasting notes of the new\r\n                products.\r\n              </p>\r\n              <p>\r\n                During the session, the consultants record the beverage notes in\r\n                a given paper form after sampling each products. At the end of\r\n                the session, the paper forms get transferred to the writing\r\n                team, who transcripts the notes into digital format. This data\r\n                is later used for creating product description, content for LCBO\r\n                website and articles.\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"6\">\r\n              <p className={sharedStyles.imageTitle}>\r\n                An example of beer evaluation form\r\n              </p>\r\n              <img\r\n                src={this.getImageUrl(\"form.png\")}\r\n                alt=\"Tasting Note Evaluation Form\"\r\n                className=\"img-fluid\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"10\">\r\n              <h3>Problems</h3>\r\n              <p>\r\n                Current evaluation method is labour intensive as it requires a\r\n                significant amount of manual effort. The entire process of\r\n                gathering, delivering paperwork and transferring data is\r\n                <i> time consuming and fallible.</i>\r\n              </p>\r\n              <p>\r\n                While it's challenging for the product consultants to manage and\r\n                organize the forms, it's a real pain for the writing team to go\r\n                through piles of paper, validate the quality of data and\r\n                manually enter it to electronic system.\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"10\">\r\n              <h3>User Persona</h3>\r\n              <p>\r\n                Imagine that there are at least 15 products to be evaluated by\r\n                10 consultants in today session. This means a minimum of 150\r\n                copies of the evaluation forms will be generated at the end of\r\n                session. To gain a better understanding of what the users are\r\n                going through, a user persona is created.\r\n              </p>\r\n              <Row className=\"justify-content-center\">\r\n                <Col lg=\"6\">\r\n                  <img\r\n                    src={this.getImageUrl(\"persona.png\")}\r\n                    alt=\"User persona\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center mb-5\">\r\n            <Col lg=\"10\">\r\n              <h3>Wireframes</h3>\r\n              <p>After reviewing the problems and user persona, I decided to</p>\r\n              <ol>\r\n                <li>\r\n                  Choose mobile as a platform device since it's portable and\r\n                  currently used by LCBO staff at the store.\r\n                </li>\r\n                <br />\r\n\r\n                <li>\r\n                  Design an application that allows product consultants to see\r\n                  list of products that need to be evaluated, select and\r\n                  evaluate products then submit the form electronically.\r\n                </li>\r\n                <br />\r\n                <li>\r\n                  Adopt a concept of multiple choice answers to craft the user\r\n                  experience. The users will simply tab buttons that represent\r\n                  their answers and proceed to next questions. With this\r\n                  approach, the users can focus on one task without having to\r\n                  process lots of information at once.\r\n                </li>\r\n\r\n                {/* <li>\r\n                  Propose that lists of products to be evaluated will need to be entered\r\n                  to the system prior to the session and the notes will\r\n                  be automatically stored in the central database after\r\n                  submission.\r\n                </li> */}\r\n              </ol>\r\n\r\n              <Row className=\"justify-content-center\">\r\n                <Col>\r\n                  <img\r\n                    src={this.getImageUrl(\"wireframes.jpg\")}\r\n                    alt=\"Tasting Note wireframes\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center mb-5\">\r\n            <Col lg=\"10\">\r\n              <h3>Mockups</h3>\r\n              <Row className=\"justify-content-center\">\r\n                <Col lg=\"12\">\r\n                  <img\r\n                    src={this.getImageUrl(\"full.png\")}\r\n                    alt=\"Tasting Note interfaces\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </ProjectLayout>\r\n    );\r\n  }\r\n\r\n  private getImageUrl(filename: string) {\r\n    return withPrefix(\r\n      `/images/${this.props.data.project.edges[0].node.imageFolder}/${filename}`\r\n    );\r\n  }\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query TastingNoteQuery($path: String!) {\r\n    allProjects: allProjectsJson {\r\n      ...ProjectFields\r\n    }\r\n    project: allProjectsJson(filter: { url: { eq: $path } }) {\r\n      ...ProjectFields\r\n    }\r\n    mainImage: file(relativePath: { eq: \"Tasting Note/main.png\" }) {\r\n      ...MainImageSizes\r\n    }\r\n  }\r\n`;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageTitle\":\"styles-module--image-title--16noi\"};"],"sourceRoot":""}