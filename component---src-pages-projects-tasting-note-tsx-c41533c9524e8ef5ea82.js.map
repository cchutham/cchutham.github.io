{"version":3,"sources":["webpack:///./src/pages/projects/tasting-note.tsx","webpack:///./src/components/project-layout.module.scss","webpack:///./src/components/project-header.module.scss","webpack:///./src/components/protected-section.module.scss","webpack:///./src/components/project-nav.tsx","webpack:///./src/components/project-footer.tsx","webpack:///./src/components/project-header.tsx","webpack:///./src/components/protected-section.tsx","webpack:///./src/components/project-layout.tsx","webpack:///./src/components/image-box.tsx","webpack:///./src/components/image-box.module.scss","webpack:///./src/pages/projects/styles.module.scss"],"names":["TastingNotePage","render","react__WEBPACK_IMPORTED_MODULE_1__","_components_project_layout__WEBPACK_IMPORTED_MODULE_6__","allProjects","this","props","data","edges","map","e","node","currentProject","project","mainImage","childImageSharp","fluid","reactstrap__WEBPACK_IMPORTED_MODULE_3__","className","lg","sharedStyles","_components_image_box__WEBPACK_IMPORTED_MODULE_5__","src","getImageUrl","alt","filename","withPrefix","imageFolder","React","pageQuery","module","exports","projectPage","btn","header","subtitle","companyTerm","smallDash","ProjectNav","_React$Component","apply","arguments","inheritsLoose_default","_proto","prototype","react","reactstrap_es","xs","getPreviousProjectLink","getNextProjectLink","_this","projects","currentIndex","findIndex","p","name","prevProject","gatsby_browser_entry","to","url","_this2","length","nextProject","ProjectFooter","project_nav_ProjectNav","ProjectHeader","styles","company","term","description","allowedHashes","ProtectedSection","call","handleFormSubmit","bind","assertThisInitialized_default","handlePasswordChange","cookies","Cookies","state","shouldShowContent","checkCookie","isInvalidPassword","password","event","setState","target","value","isCorrectPassword","checkPassword","preventDefault","passwordHash","SHA","update","digest","checkPasswordHash","set","maxAge","path","cookieHash","get","hexHash","window","ga","eventCategory","eventAction","eventLabel","indexOf","renderPasswordSection","onSubmit","autoComplete","inline","for","hidden","type","id","placeholder","onChange","invalid","color","isProtected","gatsby_image_default","a","children","ProjectLayout","layout","Helmet_default","href","rel","project_header_ProjectHeader","protected_section_ProtectedSection","project_footer_ProjectFooter","ImageBox","isModalOpen","toggleModal","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0___default","react__WEBPACK_IMPORTED_MODULE_2__","onClick","isOpen","toggle","centered","fade","charCode","imageBox","modal","imageTitle","quote"],"mappings":"wPAQqBA,oGAIZC,kBACL,OACEC,EAAA,cAACC,EAAA,EAAD,CACEC,YAAaC,KAAKC,MAAMC,KAAKH,YAAYI,MAAMC,IAAI,SAAAC,GAAC,OAAIA,EAAEC,OAC1DC,eAAgBP,KAAKC,MAAMC,KAAKM,QAAQL,MAAM,GAAGG,KACjDG,UAAWT,KAAKC,MAAMC,KAAKO,UAAUC,gBAAgBC,OAErDd,EAAA,cAACe,EAAA,EAAD,KACEf,EAAA,cAACe,EAAA,EAAD,CAAKC,UAAU,0BACbhB,EAAA,cAACe,EAAA,EAAD,CAAKE,GAAG,MACNjB,EAAA,sCACAA,EAAA,6QAOAA,EAAA,8WAUJA,EAAA,cAACe,EAAA,EAAD,CAAKC,UAAU,0BACbhB,EAAA,cAACe,EAAA,EAAD,CAAKE,GAAG,KACNjB,EAAA,mBAAGgB,UAAWE,cAAd,wCAGAlB,EAAA,cAACmB,EAAA,EAAD,CACEC,IAAKjB,KAAKkB,YAAY,YACtBC,IAAI,uBACJN,UAAU,gBAIhBhB,EAAA,cAACe,EAAA,EAAD,CAAKC,UAAU,0BACbhB,EAAA,cAACe,EAAA,EAAD,CAAKE,GAAG,MACNjB,EAAA,oCACAA,EAAA,mBAAGgB,UAAWE,SAAd,mNAMAlB,EAAA,mTAUJA,EAAA,cAACe,EAAA,EAAD,CAAKC,UAAU,0BACbhB,EAAA,cAACe,EAAA,EAAD,CAAKE,GAAG,MACNjB,EAAA,wCACAA,EAAA,6TAOAA,EAAA,cAACe,EAAA,EAAD,CAAKC,UAAU,0BACbhB,EAAA,cAACe,EAAA,EAAD,CAAKE,GAAG,KACNjB,EAAA,cAACmB,EAAA,EAAD,CACEC,IAAKjB,KAAKkB,YAAY,eACtBC,IAAI,eACJN,UAAU,kBAOpBhB,EAAA,cAACe,EAAA,EAAD,CAAKC,UAAU,+BACbhB,EAAA,cAACe,EAAA,EAAD,CAAKE,GAAG,MACNjB,EAAA,sCACAA,EAAA,sFACAA,EAAA,wBACEA,EAAA,iIAIAA,EAAA,yBAEAA,EAAA,sMAKAA,EAAA,yBACAA,EAAA,8SASFA,EAAA,cAACe,EAAA,EAAD,CAAKC,UAAU,0BACbhB,EAAA,cAACe,EAAA,EAAD,KACEf,EAAA,cAACmB,EAAA,EAAD,CACEC,IAAKjB,KAAKkB,YAAY,kBACtBC,IAAI,0BACJN,UAAU,kBAOpBhB,EAAA,cAACe,EAAA,EAAD,CAAKC,UAAU,+BACbhB,EAAA,cAACe,EAAA,EAAD,CAAKE,GAAG,MACNjB,EAAA,4CACAA,EAAA,2bAYJA,EAAA,cAACe,EAAA,EAAD,CAAKC,UAAU,0BACbhB,EAAA,cAACe,EAAA,EAAD,CAAKE,GAAG,KACNjB,EAAA,cAACmB,EAAA,EAAD,CACEC,IAAKjB,KAAKkB,YAAY,YACtBC,IAAI,0BACJN,UAAU,gBAKhBhB,EAAA,cAACe,EAAA,EAAD,CAAKC,UAAU,+BACbhB,EAAA,cAACe,EAAA,EAAD,CAAKE,GAAG,MACNjB,EAAA,+CACAA,EAAA,skBAaJA,EAAA,cAACe,EAAA,EAAD,CAAKC,UAAU,0BACbhB,EAAA,cAACe,EAAA,EAAD,CAAKE,GAAG,MACNjB,EAAA,cAACmB,EAAA,EAAD,CACEC,IAAKjB,KAAKkB,YAAY,gBACtBC,IAAI,0BACJN,UAAU,qBAShBK,qBAAYE,GAClB,OAAOC,qBAAU,WACJrB,KAAKC,MAAMC,KAAKM,QAAQL,MAAM,GAAGG,KAAKgB,YADlC,IACiDF,OApLzBG,aAyLhCC,EAAS,kCChMtBC,EAAAC,QAAA,CAAkBC,YAAA,6CAAAC,IAAA,0DCAlBH,EAAAC,QAAA,CAAkBG,OAAA,uCAAAC,SAAA,yCAAAC,YAAA,mECAlBN,EAAAC,QAAA,CAAkBM,UAAA,kLCSLC,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAAnC,KAAAoC,YAAApC,KAAAqC,IAAAJ,EAAAC,GAAA,IAAAI,EAAAL,EAAAM,UAAA,OAAAD,EACS1C,OADT,WAEI,OACE4C,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAK1C,KAAK2C,0BAClBH,EAAA,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAI7B,UAAU,cACnBb,KAAK4C,wBANhBN,EAYUK,uBAZV,WAYmC,IAAAE,EAAA7C,KACzB8C,EAAW9C,KAAKC,MAAM6C,SACtBC,EAAeD,EAASE,UAC5B,SAAAC,GAAC,OAAIA,EAAEC,MAAQL,EAAK5C,MAAMM,eAAe2C,OAE3C,GAAqB,IAAjBH,EACF,OAAO,KAET,IAAMI,EAAcL,EAASC,EAAe,GAC5C,OACEP,EAAA,cAACY,EAAA,KAAD,CAAMC,GAAIF,EAAYG,KACpBd,EAAA,mBAAG3B,UAAU,wBADf,IACyCsC,EAAYD,OAvB3DZ,EA4BUM,mBA5BV,WA4B+B,IAAAW,EAAAvD,KACrB8C,EAAW9C,KAAKC,MAAM6C,SACtBC,EAAeD,EAASE,UAC5B,SAAAC,GAAC,OAAIA,EAAEC,MAAQK,EAAKtD,MAAMM,eAAe2C,OAE3C,GAAIH,IAAiBD,EAASU,OAAS,EACrC,OAAO,KAET,IAAMC,EAAcX,EAASC,EAAe,GAC5C,OACEP,EAAA,cAACY,EAAA,KAAD,CAAMC,GAAII,EAAYH,KACnBG,EAAYP,KADf,IACqBV,EAAA,mBAAG3B,UAAU,2BAvCxCoB,EAAA,CAAgCV,aCDnBmC,EAAb,SAAAxB,GAAA,SAAAwB,IAAA,OAAAxB,EAAAC,MAAAnC,KAAAoC,YAAApC,KAAA,OAAAqC,IAAAqB,EAAAxB,GAAAwB,EAAAnB,UACS3C,OADT,WAEI,OACE4C,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAACmB,EAAD,CACEb,SAAU9C,KAAKC,MAAMF,YACrBQ,eAAgBP,KAAKC,MAAMM,mBANrCmD,EAAA,CAAmCnC,sBCCtBqC,EAAb,SAAA1B,GAAA,SAAA0B,IAAA,OAAA1B,EAAAC,MAAAnC,KAAAoC,YAAApC,KAAA,OAAAqC,IAAAuB,EAAA1B,GAAA0B,EAAArB,UACS3C,OADT,WAEI,OACE4C,EAAA,cAACC,EAAA,EAAD,CAAW5B,UAAWgD,UACpBrB,EAAA,cAACmB,EAAD,CACEb,SAAU9C,KAAKC,MAAMF,YACrBQ,eAAgBP,KAAKC,MAAMM,iBAE7BiC,EAAA,cAACC,EAAA,EAAD,CAAK5B,UAAU,0BACb2B,EAAA,cAACC,EAAA,EAAD,CAAK3B,GAAG,MACN0B,EAAA,wBAAKxC,KAAKC,MAAMM,eAAe2C,MAC/BV,EAAA,oBAAI3B,UAAWgD,eACZ7D,KAAKC,MAAMM,eAAeuD,QAC1B,KACA9D,KAAKC,MAAMM,eAAewD,MAE7BvB,EAAA,oBAAI3B,UAAWgD,YAAf,KACK7D,KAAKC,MAAMM,eAAeyD,iBAjB3CJ,EAAA,CAAmCrC,2ECqB7B0C,EAAgB,CACpB,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,oEAGWC,EAAb,SAAAhC,GAME,SAAAgC,EAAYjE,GAA8B,IAAA4C,EAAA,OACxCA,EAAAX,EAAAiC,KAAAnE,KAAMC,IAAND,MAEKoE,iBAAmBvB,EAAKuB,iBAAiBC,KAAtBC,QAAAzB,KACxBA,EAAK0B,qBAAuB1B,EAAK0B,qBAAqBF,KAA1BC,QAAAzB,KAC5BA,EAAK2B,QAAU,IAAIC,IAEnB5B,EAAK6B,MAAQ,CACXC,kBAAmB9B,EAAK+B,cACxBC,mBAAmB,EACnBC,SAAU,IAV4BjC,EAN5CR,IAAA6B,EAAAhC,GAAA,IAAAI,EAAA4B,EAAA3B,UAAA,OAAAD,EAoBUiC,qBApBV,SAoB+BQ,GAC3B/E,KAAKgF,SAAS,CAAEF,SAAUC,EAAME,OAAOC,SArB3C5C,EAwBU8B,iBAxBV,SAwB2BW,GACvB,IAAII,EAAoBnF,KAAKoF,cAAcpF,KAAK0E,MAAMI,UACtD9E,KAAKgF,SAAS,CACZL,kBAAmBQ,EACnBN,mBAAoBM,IAEtBJ,EAAMM,kBA9BV/C,EAiCU8C,cAjCV,SAiCwBN,GACpB,IAAMQ,EAAeC,EAAI,UACtBC,OAAOV,GACPW,OAAO,OACV,QAAIzF,KAAK0F,kBAAkBJ,KAEzBtF,KAAKwE,QAAQmB,IAhEY,cAgEgBL,EAAc,CACrDM,OAAQ,MACRC,KAAM,OAED,IA3CbvD,EAgDUsC,YAhDV,WAiDI,IAAMkB,EAAa9F,KAAKwE,QAAQuB,IA1EL,eA2E3B,OAAO/F,KAAK0F,kBAAkBI,IAlDlCxD,EAqDUoD,kBArDV,SAqD4BM,GACxB,QAAKA,IAKAC,OAAeC,IACjBD,OAAeC,GAAG,OAAQ,QAAS,CAClCC,cAAe,cACfC,YAAa,QACbC,WAAYL,KAI2B,IAApC/B,EAAcqC,QAAQN,KAnEjC1D,EAsESiE,sBAtET,WAuEI,OACE/D,EAAA,cAACC,EAAA,EAAD,CAAW5B,UAAU,aACnB2B,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAACC,EAAA,EAAD,CAAK5B,UAAU,eACb2B,EAAA,8CACAA,EAAA,kHAMJA,EAAA,cAACC,EAAA,EAAD,CAAK5B,UAAU,0BACb2B,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAACC,EAAA,EAAD,CACE+D,SAAUxG,KAAKoE,iBACfqC,aAAa,MACbC,QAAM,EACN7F,UAAU,0BAEV2B,EAAA,cAACC,EAAA,EAAD,CAAOkE,IAAI,WAAWC,QAAM,GAA5B,YAGApE,EAAA,cAACC,EAAA,EAAD,CACEoE,KAAK,WACL3D,KAAK,WACL4D,GAAG,WACHC,YAAY,sBACZ7B,MAAOlF,KAAK0E,MAAMI,SAClBkC,SAAUhH,KAAKuE,qBACfkC,aAAa,MACbQ,QAASjH,KAAK0E,MAAMG,oBACnB,IACHrC,EAAA,cAACC,EAAA,EAAD,CAAQoE,KAAK,SAASK,MAAM,GAAGrG,UAAU,QAAzC,UAGA2B,EAAA,cAACC,EAAA,EAAD,CAAc5B,UAAU,eAAxB,8CA1GdyB,EAoHS1C,OApHT,WAqHI,OAAII,KAAKC,MAAMkH,cAAgBnH,KAAK0E,MAAMC,kBACjC3E,KAAKuG,wBAIZ/D,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAACC,EAAA,EAAD,CAAK5B,UAAU,0BACb2B,EAAA,cAACC,EAAA,EAAD,CAAK3B,GAAG,MACN0B,EAAA,cAAC4E,EAAAC,EAAD,CACElG,IAAI,qBACJR,MAAOX,KAAKC,MAAMQ,UAClBI,UAAU,6BAIhB2B,EAAA,cAACC,EAAA,EAAD,CAAK5B,UAAU,+BACb2B,EAAA,cAACC,EAAA,EAAD,CAAK3B,GAAG,MACN0B,EAAA,oBAAI3B,UAAWgD,iBAIpB7D,KAAKC,MAAMqH,WA3IpBpD,EAAA,CAAsC3C,6CCtC/B,IAAMgG,EAAb,SAAArF,GAAA,SAAAqF,IAAA,OAAArF,EAAAC,MAAAnC,KAAAoC,YAAApC,KAAA,OAAAqC,IAAAkF,EAAArF,GAAAqF,EAAAhF,UACS3C,OADT,WAEI,OACE4C,EAAA,cAACgF,EAAA,EAAD,KACEhF,EAAA,cAACiF,EAAAJ,EAAD,KACE7E,EAAA,2BAAQxC,KAAKC,MAAMM,eAAe2C,MAClCV,EAAA,sBACEkF,KAAK,kEACLC,IAAI,gBAGRnF,EAAA,qBAAK3B,UAAWgD,eACdrB,EAAA,cAACoF,EAAD,CACE7H,YAAaC,KAAKC,MAAMF,YACxBQ,eAAgBP,KAAKC,MAAMM,iBAE7BiC,EAAA,cAACqF,EAAD,CACEpH,UAAWT,KAAKC,MAAMQ,UACtB0G,YAAanH,KAAKC,MAAMM,eAAe4G,aAEtCnH,KAAKC,MAAMqH,UAEd9E,EAAA,cAACsF,EAAD,CACE/H,YAAaC,KAAKC,MAAMF,YACxBQ,eAAgBP,KAAKC,MAAMM,oBAxBvCgH,EAAA,CAAmChG,6ICDtBwG,EAAb,SAAA7F,GACE,SAAA6F,EAAY9H,GAAsB,IAAA4C,EAAA,OAChCA,EAAAX,EAAAiC,KAAAnE,KAAMC,IAAND,MACK0E,MAAQ,CACXsD,aAAa,GAEfnF,EAAKoF,YAAcpF,EAAKoF,YAAY5D,KAAjB6D,QAAArF,KALaA,EADpCsF,IAAAJ,EAAA7F,GAAA,IAAAI,EAAAyF,EAAAxF,UAAA,OAAAD,EASS2F,YATT,WAUIjI,KAAKgF,SAAS,CACZgD,aAAchI,KAAK0E,MAAMsD,eAX/B1F,EAeS1C,OAfT,WAgBI,OACEwI,EAAA,cAAAA,EAAA,cACEA,EAAA,qBACEnH,IAAKjB,KAAKC,MAAMgB,IAChBE,IAAKnB,KAAKC,MAAMkB,IAChBN,UAAcgD,WAAL,IAAwB7D,KAAKC,MAAMY,UAC5CwH,QAASrI,KAAKiI,cAEhBG,EAAA,cAACxH,EAAA,EAAD,CACE0H,OAAQtI,KAAK0E,MAAMsD,YACnBO,OAAQvI,KAAKiI,YACbO,UAAU,EACVC,MAAM,EACN5H,UAAWgD,SAEXuE,EAAA,cAACxH,EAAA,EAAD,CAAa2H,OAAQvI,KAAKiI,YAAaS,SAAS,KAC7C1I,KAAKC,MAAMkB,KAEdiH,EAAA,cAACxH,EAAA,EAAD,CAAWC,UAAU,eACnBuH,EAAA,qBACEnH,IAAKjB,KAAKC,MAAMgB,IAChBE,IAAKnB,KAAKC,MAAMkB,IAChBN,UAAWb,KAAKC,MAAMY,aAG1BuH,EAAA,cAACxH,EAAA,EAAD,KACEwH,EAAA,cAACxH,EAAA,EAAD,CAAQsG,MAAM,UAAUmB,QAASrI,KAAKiI,aAAtC,aA1CZF,EAAA,CAA8BxG,kCCb9BE,EAAAC,QAAA,CAAkBiH,SAAA,qCAAAC,MAAA,uDCAlBnH,EAAAC,QAAA,CAAkBmH,WAAA,oCAAAC,MAAA","file":"component---src-pages-projects-tasting-note-tsx-c41533c9524e8ef5ea82.js","sourcesContent":["import * as React from \"react\";\r\nimport * as sharedStyles from \"./styles.module.scss\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport { graphql, withPrefix } from \"gatsby\";\r\nimport { ImageBox } from \"../../components/image-box\";\r\nimport { ProjectLayout } from \"../../components/project-layout\";\r\nimport { ProjectPageProps } from \"../../models/project-page-props\";\r\n\r\nexport default class TastingNotePage extends React.Component<\r\n  ProjectPageProps,\r\n  {}\r\n> {\r\n  public render() {\r\n    return (\r\n      <ProjectLayout\r\n        allProjects={this.props.data.allProjects.edges.map(e => e.node)}\r\n        currentProject={this.props.data.project.edges[0].node}\r\n        mainImage={this.props.data.mainImage.childImageSharp.fluid}\r\n      >\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"10\">\r\n              <h3>Background</h3>\r\n              <p>\r\n                LCBO is one of the world's largest alcoholic beverage\r\n                purchasers, there are numbers of new products need to be\r\n                evaluated each year. As a result, product consultants meet 3\r\n                times a year to sample and document tasting notes of the new\r\n                products.\r\n              </p>\r\n              <p>\r\n                During the session, the consultants record the beverage notes in\r\n                a given paper form after sampling each products. At the end of\r\n                the session, the paper forms get transferred to the writing\r\n                team, who transcripts the notes into digital format. This data\r\n                is later used for creating product description, content for LCBO\r\n                website and articles.\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"6\">\r\n              <p className={sharedStyles.imageTitle}>\r\n                An example of beer a evaluation form\r\n              </p>\r\n              <ImageBox\r\n                src={this.getImageUrl(\"form.png\")}\r\n                alt=\"Beer Evaluation Form\"\r\n                className=\"img-fluid\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"10\">\r\n              <h3>Problems</h3>\r\n              <p className={sharedStyles.quote}>\r\n                Current evaluation method is labour intensive as it requires a\r\n                significant amount of manual effort. The entire process of\r\n                gathering, delivering paperwork and transferring data is\r\n                time-consuming and fallible.\r\n              </p>\r\n              <p>\r\n                While it's challenging for the product consultants to manage and\r\n                organize the product evaluation forms, it's a real pain for the\r\n                data and writing team to go through piles of paper, try to read\r\n                the hand writings, validate data quality, and manually enter it\r\n                to electronic system.\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"10\">\r\n              <h3>User Persona</h3>\r\n              <p>\r\n                Imagine that there are at least 15 products to be evaluated by\r\n                10 consultants in today session. This means a minimum of 150\r\n                copies of the evaluation forms will be generated at the end of\r\n                session. To gain a better understanding of what the users are\r\n                going through, a user persona is created.\r\n              </p>\r\n              <Row className=\"justify-content-center\">\r\n                <Col lg=\"6\">\r\n                  <ImageBox\r\n                    src={this.getImageUrl(\"persona.png\")}\r\n                    alt=\"User persona\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center mb-5\">\r\n            <Col lg=\"10\">\r\n              <h3>Wireframes</h3>\r\n              <p>After reviewing the problems and user persona, I decided to</p>\r\n              <ol>\r\n                <li>\r\n                  Choose mobile as a platform device since it's portable and\r\n                  currently used by LCBO staff at the store.\r\n                </li>\r\n                <br />\r\n\r\n                <li>\r\n                  Design an application that allows product consultants to see\r\n                  list of products that need to be evaluated, select and\r\n                  evaluate products then submit the form electronically.\r\n                </li>\r\n                <br />\r\n                <li>\r\n                  Adopt a concept of multiple choice answers to craft the user\r\n                  experience. The users will simply tab buttons that represent\r\n                  their answers and proceed to next questions. With this\r\n                  approach, the users can focus on one task without having to\r\n                  process lots of information at once.\r\n                </li>\r\n              </ol>\r\n\r\n              <Row className=\"justify-content-center\">\r\n                <Col>\r\n                  <ImageBox\r\n                    src={this.getImageUrl(\"wireframes.jpg\")}\r\n                    alt=\"Tasting Note wireframes\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center mb-5\">\r\n            <Col lg=\"10\">\r\n              <h3>Finding Products</h3>\r\n              <p>\r\n                As soon as the product consultants log in to their account, they\r\n                will see a list of products that needs to be evaluated as soon\r\n                as possible on the home page. They can also use a search tool to\r\n                look for specific products. By tabbing \"Evaluate\", the\r\n                consultants will be able to see a full list of products they\r\n                need to evaluate. From there, they can choose to view just beer,\r\n                wine, spirits, or all types of products.\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"8\">\r\n              <ImageBox\r\n                src={this.getImageUrl(\"find.png\")}\r\n                alt=\"Tasting Note interfaces\"\r\n                className=\"img-fluid\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center mb-5\">\r\n            <Col lg=\"10\">\r\n              <h3>Evaluating Products</h3>\r\n              <p>\r\n                Once the consultants select the product, the system will ask\r\n                them to take a picture of that product. The picture will enable\r\n                the data team to verify whether the correct product is being\r\n                evaluated. In addition, the data will be useful for any future\r\n                project that involves pattern recognition or machine learning.\r\n                Once the picture is submitted, the consultants will be able\r\n                select the answer to each question that was previously listed in\r\n                the paper form. The consultants will have an opportunity to\r\n                review their answers before submitting their evaluation.\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"10\">\r\n              <ImageBox\r\n                src={this.getImageUrl(\"evaluate.png\")}\r\n                alt=\"Tasting Note interfaces\"\r\n                className=\"img-fluid\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </ProjectLayout>\r\n    );\r\n  }\r\n\r\n  private getImageUrl(filename: string) {\r\n    return withPrefix(\r\n      `/images/${this.props.data.project.edges[0].node.imageFolder}/${filename}`\r\n    );\r\n  }\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query TastingNoteQuery($path: String!) {\r\n    allProjects: allProjectsJson {\r\n      ...ProjectFields\r\n    }\r\n    project: allProjectsJson(filter: { url: { eq: $path } }) {\r\n      ...ProjectFields\r\n    }\r\n    mainImage: file(relativePath: { eq: \"Tasting Note/main.png\" }) {\r\n      ...MainImageSizes\r\n    }\r\n  }\r\n`;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectPage\":\"project-layout-module--project-page--1BrGb\",\"btn\":\"project-layout-module--btn--1vOoT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"project-header-module--header--3RLsB\",\"subtitle\":\"project-header-module--subtitle--3Upkm\",\"companyTerm\":\"project-header-module--company-term--1vFwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smallDash\":\"protected-section-module--small-dash--1iPs7\"};","import * as React from \"react\";\r\nimport { Project } from \"../models/project\";\r\nimport { Link, withPrefix } from \"gatsby\";\r\nimport { Row, Col } from \"reactstrap\";\r\n\r\nexport interface ProjectNavProps {\r\n  projects: Project[];\r\n  currentProject: Project;\r\n}\r\n\r\nexport class ProjectNav extends React.Component<ProjectNavProps, {}> {\r\n  public render() {\r\n    return (\r\n      <Row>\r\n        <Col xs=\"6\">{this.getPreviousProjectLink()}</Col>\r\n        <Col xs=\"6\" className=\"text-right\">\r\n          {this.getNextProjectLink()}\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  private getPreviousProjectLink() {\r\n    const projects = this.props.projects;\r\n    const currentIndex = projects.findIndex(\r\n      p => p.name == this.props.currentProject.name\r\n    );\r\n    if (currentIndex === 0) {\r\n      return null;\r\n    }\r\n    const prevProject = projects[currentIndex - 1];\r\n    return (\r\n      <Link to={prevProject.url}>\r\n        <i className=\"fas fa-chevron-left\" /> {prevProject.name}\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  private getNextProjectLink() {\r\n    const projects = this.props.projects;\r\n    const currentIndex = projects.findIndex(\r\n      p => p.name == this.props.currentProject.name\r\n    );\r\n    if (currentIndex === projects.length - 1) {\r\n      return null;\r\n    }\r\n    const nextProject = projects[currentIndex + 1];\r\n    return (\r\n      <Link to={nextProject.url}>\r\n        {nextProject.name} <i className=\"fas fa-chevron-right\" />\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { Project } from \"../models/project\";\r\nimport { Container, Row } from \"reactstrap\";\r\nimport { ProjectNav } from \"./project-nav\";\r\n\r\nexport interface ProjectFooterProps {\r\n  allProjects: Project[];\r\n  currentProject: Project;\r\n}\r\nexport class ProjectFooter extends React.Component<ProjectFooterProps, {}> {\r\n  public render() {\r\n    return (\r\n      <Container>\r\n        <ProjectNav\r\n          projects={this.props.allProjects}\r\n          currentProject={this.props.currentProject}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport * as styles from \"./project-header.module.scss\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport { Project } from \"../models/project\";\r\nimport { ProjectNav } from \"./project-nav\";\r\n\r\nexport interface ProjectHeaderProps {\r\n  allProjects: Project[];\r\n  currentProject: Project;\r\n}\r\nexport class ProjectHeader extends React.Component<ProjectHeaderProps, {}> {\r\n  public render() {\r\n    return (\r\n      <Container className={styles.header}>\r\n        <ProjectNav\r\n          projects={this.props.allProjects}\r\n          currentProject={this.props.currentProject}\r\n        />\r\n        <Row className=\"justify-content-center\">\r\n          <Col lg=\"10\">\r\n            <h1>{this.props.currentProject.name}</h1>\r\n            <h4 className={styles.companyTerm}>\r\n              {this.props.currentProject.company}\r\n              {\", \"}\r\n              {this.props.currentProject.term}\r\n            </h4>\r\n            <h2 className={styles.subtitle}>\r\n              — {this.props.currentProject.description}\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport * as SHA from \"sha.js\";\r\nimport * as styles from \"./protected-section.module.scss\";\r\nimport Cookies from \"universal-cookie\";\r\nimport Img from \"gatsby-image\";\r\nimport {\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Button,\r\n  FormFeedback,\r\n  Label,\r\n} from \"reactstrap\";\r\n\r\nexport interface ProtectedSectionProps {\r\n  isProtected: boolean;\r\n  mainImage?: any;\r\n}\r\n\r\nexport interface ProtectedSectionState {\r\n  shouldShowContent: boolean;\r\n  isInvalidPassword: boolean;\r\n  password: string;\r\n}\r\n\r\nconst passwordHashCookieName = \"ProjectHash\";\r\n\r\n// To create one, use https://www.xorbin.com/tools/sha256-hash-calculator\r\nconst allowedHashes = [\r\n  \"5b42389ef84139ae8643af2a1b369089a3e7298c47e590d18a201b87ebee51e8\", // bubblegum\r\n  \"83ac1f81c821f49dcd69ad10cce8b57c86ce0902e15776aadc2edbe26925bd33\", // sunglow\r\n  \"e13aca4535aeb2e3e048bface0b25fac23d65e43b6f0c46c66cf38ba3bccdd0d\", // inbloom\r\n  \"bca53ada79cb1febc267110d0d890bf862ddf31698e44835aa062b5db7e2404d\", // pixiedust\r\n  \"8d607a0cf2052c03e793bdbef576b17df8c7a99626d8c915f843143c033e4ed7\", // moonchild\r\n  \"e24423c37fc0312c31af79fbdf5260e50f2e96c13c3c2a1dd218d12001fe39d1\", // starrynight\r\n  \"b04da4304f0ff90bd7038990de132474654ebcb2ca119264da9327b02f162005\", // littlestar\r\n  \"c0dcbf063af60b2e84613079d09be076979a91b8e03a237cc3c67753b7701eba\", // candycane\r\n  \"3841e6d4e4cbdaf8adffeeacc43911e00edad08bea26f62ecd77b25130173dd0\", // designbetter\r\n  \"598427034543b344eacf5b60ac94d5a9c44f3dc6786ef7b1893e2dc8842dbccf\", // bumblebee\r\n  \"767c5ba5803c073d17815a2bdda729a8f0ba3c9d3c28f66f1f593c3349e10d31\", // drawsomething\r\n  \"a97d087a019c760196f813f851f6d8bafe3d1f9fcfa69229a04bde71ce339148\", // jetsetter\r\n  \"dc8e5ea02040747f4cf5d10ea7dc5c4b32aa44b71e7adea498421b69772f6bd4\", // cornflower\r\n  \"3ad003a7823a1b94b7f0fc3d1c766473064adf77fcca0f6ac8ec3fd03f6585c4\", // magicwand\r\n  \"7b8a9aba12189b67d5acfbc4bc3e30368b00cec3889d2e0ab8efe885a911dfae\", // skyfall\r\n  \"7d8de942f2483e3fd3c0a412d166b50a882eeeb2f291a9099d2096778596f420\", // jellybeam\r\n  \"c9000d331c968e21288a961065842598ba5f476366b777049eab1f8780d9aa15\", // sketchtogether\r\n  \"9f075e1469df2af1bd79447c7de3eda5d121f0644456afdefd156fa98e93d3e5\", // pricklypear\r\n  \"acb7b3b2eec3e44cdbc9fd3031d11affb356af1360d5049b69d406c203ae0059\", // birthdaywish\r\n];\r\n\r\nexport class ProtectedSection extends React.Component<\r\n  ProtectedSectionProps,\r\n  ProtectedSectionState\r\n> {\r\n  private cookies: Cookies;\r\n\r\n  constructor(props: ProtectedSectionProps) {\r\n    super(props);\r\n\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n    this.cookies = new Cookies();\r\n\r\n    this.state = {\r\n      shouldShowContent: this.checkCookie(),\r\n      isInvalidPassword: false,\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  private handlePasswordChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n    this.setState({ password: event.target.value });\r\n  }\r\n\r\n  private handleFormSubmit(event: React.FormEvent<HTMLFormElement>) {\r\n    let isCorrectPassword = this.checkPassword(this.state.password);\r\n    this.setState({\r\n      shouldShowContent: isCorrectPassword,\r\n      isInvalidPassword: !isCorrectPassword,\r\n    });\r\n    event.preventDefault();\r\n  }\r\n\r\n  private checkPassword(password: string): boolean {\r\n    const passwordHash = SHA(\"sha256\")\r\n      .update(password)\r\n      .digest(\"hex\");\r\n    if (this.checkPasswordHash(passwordHash)) {\r\n      // Save the hash to cookies to maintain the session\r\n      this.cookies.set(passwordHashCookieName, passwordHash, {\r\n        maxAge: 3 * 60 * 60, // 3 hours\r\n        path: \"/\",\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private checkCookie(): boolean {\r\n    const cookieHash = this.cookies.get(passwordHashCookieName);\r\n    return this.checkPasswordHash(cookieHash);\r\n  }\r\n\r\n  private checkPasswordHash(hexHash: string) {\r\n    if (!hexHash) {\r\n      return false;\r\n    }\r\n\r\n    // Log Google Analytics event\r\n    if ((window as any).ga) {\r\n      (window as any).ga(\"send\", \"event\", {\r\n        eventCategory: \"ProjectHash\",\r\n        eventAction: \"check\",\r\n        eventLabel: hexHash,\r\n      });\r\n    }\r\n\r\n    return allowedHashes.indexOf(hexHash) !== -1;\r\n  }\r\n\r\n  public renderPasswordSection() {\r\n    return (\r\n      <Container className=\"mt-5 mb-5\">\r\n        <Row>\r\n          <Col className=\"text-center\">\r\n            <h3>Password Protected</h3>\r\n            <p>\r\n              This project is protected under a NDA. Please enter a password to\r\n              access the project.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col>\r\n            <Form\r\n              onSubmit={this.handleFormSubmit}\r\n              autoComplete=\"off\"\r\n              inline\r\n              className=\"justify-content-center\"\r\n            >\r\n              <Label for=\"password\" hidden>\r\n                Password\r\n              </Label>\r\n              <Input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Enter a password...\"\r\n                value={this.state.password}\r\n                onChange={this.handlePasswordChange}\r\n                autoComplete=\"off\"\r\n                invalid={this.state.isInvalidPassword}\r\n              />{\" \"}\r\n              <Button type=\"submit\" color=\"\" className=\"ml-2\">\r\n                Submit\r\n              </Button>\r\n              <FormFeedback className=\"text-center\">\r\n                Incorrect password. Please try again.\r\n              </FormFeedback>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    if (this.props.isProtected && !this.state.shouldShowContent) {\r\n      return this.renderPasswordSection();\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"10\">\r\n              <Img\r\n                alt=\"main project image\"\r\n                fluid={this.props.mainImage}\r\n                className=\"background-theme-color\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-center mt-3\">\r\n            <Col lg=\"10\">\r\n              <hr className={styles.smallDash} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        {this.props.children}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport * as styles from \"./project-layout.module.scss\";\r\nimport Helmet from \"react-helmet\";\r\nimport Layout from \"./layout\";\r\nimport { Project } from \"../models/project\";\r\nimport { ProjectFooter } from \"./project-footer\";\r\nimport { ProjectHeader } from \"./project-header\";\r\nimport { ProtectedSection } from \"./protected-section\";\r\n\r\nexport interface ProjectLayoutProps {\r\n  allProjects: Project[];\r\n  currentProject: Project;\r\n  mainImage?: any;\r\n  children: any;\r\n}\r\nexport class ProjectLayout extends React.Component<ProjectLayoutProps, {}> {\r\n  public render() {\r\n    return (\r\n      <Layout>\r\n        <Helmet>\r\n          <title>{this.props.currentProject.name}</title>\r\n          <link\r\n            href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,400i,700\"\r\n            rel=\"stylesheet\"\r\n          />\r\n        </Helmet>\r\n        <div className={styles.projectPage}>\r\n          <ProjectHeader\r\n            allProjects={this.props.allProjects}\r\n            currentProject={this.props.currentProject}\r\n          />\r\n          <ProtectedSection\r\n            mainImage={this.props.mainImage}\r\n            isProtected={this.props.currentProject.isProtected}\r\n          >\r\n            {this.props.children}\r\n          </ProtectedSection>\r\n          <ProjectFooter\r\n            allProjects={this.props.allProjects}\r\n            currentProject={this.props.currentProject}\r\n          />\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { Modal, ModalBody, ModalFooter, Button, ModalHeader } from \"reactstrap\";\r\nimport * as styles from \"./image-box.module.scss\";\r\n\r\nexport interface ImageBoxProps {\r\n  src: string;\r\n  alt?: string;\r\n  className?: string;\r\n}\r\n\r\nexport interface ImageBoxState {\r\n  isModalOpen: boolean;\r\n}\r\n\r\nexport class ImageBox extends React.Component<ImageBoxProps, ImageBoxState> {\r\n  constructor(props: ImageBoxProps) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n    };\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n  }\r\n\r\n  public toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <>\r\n        <img\r\n          src={this.props.src}\r\n          alt={this.props.alt}\r\n          className={`${styles.imageBox} ${this.props.className}`}\r\n          onClick={this.toggleModal}\r\n        />\r\n        <Modal\r\n          isOpen={this.state.isModalOpen}\r\n          toggle={this.toggleModal}\r\n          centered={true}\r\n          fade={false}\r\n          className={styles.modal}\r\n        >\r\n          <ModalHeader toggle={this.toggleModal} charCode=\"X\">\r\n            {this.props.alt}\r\n          </ModalHeader>\r\n          <ModalBody className=\"text-center\">\r\n            <img\r\n              src={this.props.src}\r\n              alt={this.props.alt}\r\n              className={this.props.className}\r\n            />\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.toggleModal}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageBox\":\"image-box-module--image-box--1b_2B\",\"modal\":\"image-box-module--modal--6kXAf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageTitle\":\"styles-module--image-title--16noi\",\"quote\":\"styles-module--quote--2RFU9\"};"],"sourceRoot":""}