{"version":3,"sources":["webpack:///component---src-pages-projects-tasting-note-tsx-f412ee9fb8b74d4ec916.js","webpack:///./src/pages/projects/styles.scss","webpack:///./src/pages/projects/tasting-note.tsx"],"names":["webpackJsonp","243","module","exports","image-title","imageTitle","146","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","gatsby_link_1","React","reactstrap_1","project_layout_1","sharedStyles","TastingNotePage","_React$Component","this","apply","arguments","render","createElement","ProjectLayout","allProjects","props","data","edges","map","e","node","project","mainImage","childImageSharp","sizes","Container","Row","Col","className","lg","src","withPrefix","imageFolder","alt","Component","default","pageQuery"],"mappings":"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","file":"component---src-pages-projects-tasting-note-tsx-f412ee9fb8b74d4ec916.js","sourcesContent":["webpackJsonp([219653171580678],{\n\n/***/ 243:\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\tmodule.exports = {\"image-title\":\"image-title__2jb33\",\"imageTitle\":\"image-title__2jb33\"};\n\n/***/ }),\n\n/***/ 146:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar gatsby_link_1 = __webpack_require__(14);\n\tvar React = __webpack_require__(1);\n\tvar reactstrap_1 = __webpack_require__(4);\n\tvar project_layout_1 = __webpack_require__(9);\n\tvar sharedStyles = __webpack_require__(243);\n\t\n\tvar TastingNotePage = function (_React$Component) {\n\t    _inherits(TastingNotePage, _React$Component);\n\t\n\t    function TastingNotePage() {\n\t        _classCallCheck(this, TastingNotePage);\n\t\n\t        return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n\t    }\n\t\n\t    TastingNotePage.prototype.render = function render() {\n\t        return React.createElement(project_layout_1.ProjectLayout, { allProjects: this.props.data.allProjects.edges.map(function (e) {\n\t                return e.node;\n\t            }), project: this.props.data.project.edges[0].node, mainImage: this.props.data.mainImage.childImageSharp.sizes }, React.createElement(reactstrap_1.Container, null, React.createElement(reactstrap_1.Row, null, React.createElement(reactstrap_1.Col, null, React.createElement(\"h3\", null, \"Current Way of Collecting Data\"), React.createElement(\"h4\", null, \"\\u2014 data is recorded in paper format before it gets transferred to electronic format\"), React.createElement(\"ul\", null, React.createElement(\"li\", null, \"LCBO is one of the world's largest alcoholic beverage purchasers, there are numbers of new products need to be evaluated yearly.\"), React.createElement(\"li\", null, \"Product consultants meet 3 times a year to sample and document tasting notes of new products.\"), React.createElement(\"li\", null, \"After tasting each product, the consultants have to record the beverage notes in provided paper form.\"), React.createElement(\"li\", null, \"At the end of the tasting session, paper forms get transferred to the writing team to transcript the evaluation notes into digital format.\")))), React.createElement(reactstrap_1.Row, { className: \"justify-content-center\" }, React.createElement(reactstrap_1.Col, { lg: \"6\" }, React.createElement(\"p\", { className: sharedStyles.imageTitle }, \"An example of beer evaluation form\"), React.createElement(\"img\", { src: gatsby_link_1.withPrefix(\"/images/\" + this.props.data.project.edges[0].node.imageFolder + \"/form.png\"), alt: \"Tasting Note Evaluation Form\", className: \"img-fluid\" }))), React.createElement(reactstrap_1.Row, null, React.createElement(reactstrap_1.Col, null, React.createElement(\"h3\", null, \"Identifying Problem\"), React.createElement(\"h4\", null, \"\\u2014 current process is labour intensive and prone to error\"), React.createElement(\"p\", null, \"The existing evaluation method requires a significant amount of manual effort. The entire process of gathering, delivering paperwork and transferring data is time consuming and fallible. While it's challenging for the product consultant to to manage and organize all the evaluation forms, it's a pain for the writing team to go through piles of paper, validate the quality of data and manually enter the notes to electronic system.\", \" \"))), React.createElement(reactstrap_1.Row, null, React.createElement(reactstrap_1.Col, null, React.createElement(\"h3\", null, \"Crafting the Experience\"), React.createElement(\"h4\", null, \"\\u2014 minimize manual process by enabling product consultants to evaluate products electronically\", \" \"), React.createElement(\"ul\", null, React.createElement(\"li\", null, React.createElement(\"b\", null, \"User Persona \\u2014 \"), React.createElement(\"i\", null, \"understanding what user is going through \")), React.createElement(\"p\", null, \"The beginning of one's worst nightmare: imagine that there are at least 15 products to be evaluated by 10 consultants in today session. This means a minimum of 150 copies of the evaluation forms will be generated at the end of session.\"), React.createElement(reactstrap_1.Row, { className: \"justify-content-center\" }, React.createElement(reactstrap_1.Col, { lg: \"6\" }, React.createElement(\"img\", { src: gatsby_link_1.withPrefix(\"/images/\" + this.props.data.project.edges[0].node.imageFolder + \"/persona.png\"), alt: \"Tasting Note Evaluation Form\", className: \"img-fluid\" }))), React.createElement(\"li\", null, React.createElement(\"b\", null, \" Wireframes \\u2014 \"), \" \", React.createElement(\"i\", null, \"creating the first low-fidelity prototype to present ideas & get feedback from stakeholders\")), React.createElement(\"p\", null, \"After reviewing user\\u2019s problem and persona, I decided to\"), React.createElement(\"ul\", null, React.createElement(\"li\", null, \"propose that lists of products to be evaluated will be entered to the system prior to the tasting session and the notes will be automatically stored in the central database after submission.\"), React.createElement(\"li\", null, \"choose mobile as a platform device since it's portable and currently used by some of LCBO staff at the store.\"), React.createElement(\"li\", null, \"design a mobile application that allows product consultants to see list products that need to be evaluated, select and evaluate products then submit the forms electronically.\"), React.createElement(\"li\", null, \"adopt a concept of multiple choice answers to craft the user experience. The users will simply tab buttons that represent their answers before proceeding to the next question. With this approach, the users can focus on one task without having to process lots of information at once.\"), React.createElement(\"li\", null, \"use text field as a channel to receive longer input \")), React.createElement(\"img\", { src: gatsby_link_1.withPrefix(\"/images/\" + this.props.data.project.edges[0].node.imageFolder + \"/wireframes.jpg\"), alt: \"Tasting Note Evaluation Form\", className: \"img-fluid\" }), React.createElement(\"li\", null, React.createElement(\"b\", null, \" Mockups \"), \" \"), React.createElement(\"img\", { src: gatsby_link_1.withPrefix(\"/images/\" + this.props.data.project.edges[0].node.imageFolder + \"/full.png\"), alt: \"Tasting Note Evaluation Form\", className: \"img-fluid\" }))))));\n\t    };\n\t\n\t    return TastingNotePage;\n\t}(React.Component);\n\t\n\texports.default = TastingNotePage;\n\texports.pageQuery = \"** extracted graphql fragment **\";\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-projects-tasting-note-tsx-f412ee9fb8b74d4ec916.js","// removed by extract-text-webpack-plugin\nmodule.exports = {\"image-title\":\"image-title__2jb33\",\"imageTitle\":\"image-title__2jb33\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/projects/styles.scss\n// module id = 243\n// module chunks = 219653171580678","import { withPrefix } from \"gatsby-link\";\r\nimport * as React from \"react\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport { ProjectLayout } from \"../../components/project-layout\";\r\nimport { ProjectPageProps } from \"../../models/project-page-props\";\r\nimport * as sharedStyles from \"./styles.scss\";\r\n\r\nexport default class TastingNotePage extends React.Component<\r\n  ProjectPageProps,\r\n  {}\r\n> {\r\n  public render() {\r\n    return (\r\n      <ProjectLayout\r\n        allProjects={this.props.data.allProjects.edges.map(e => e.node)}\r\n        project={this.props.data.project.edges[0].node}\r\n        mainImage={this.props.data.mainImage.childImageSharp.sizes}\r\n      >\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <h3>Current Way of Collecting Data</h3>\r\n              <h4>\r\n                — data is recorded in paper format before it gets transferred to\r\n                electronic format\r\n              </h4>\r\n              <ul>\r\n                <li>\r\n                  LCBO is one of the world's largest alcoholic beverage\r\n                  purchasers, there are numbers of new products need to be\r\n                  evaluated yearly.\r\n                </li>\r\n                <li>\r\n                  Product consultants meet 3 times a year to sample and document\r\n                  tasting notes of new products.\r\n                </li>\r\n                <li>\r\n                  After tasting each product, the consultants have to record the\r\n                  beverage notes in provided paper form.\r\n                </li>\r\n                <li>\r\n                  At the end of the tasting session, paper forms get transferred\r\n                  to the writing team to transcript the evaluation notes into\r\n                  digital format.\r\n                </li>\r\n              </ul>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"6\">\r\n              <p className={sharedStyles.imageTitle}>\r\n                An example of beer evaluation form\r\n              </p>\r\n              <img\r\n                src={withPrefix(\r\n                  `/images/${\r\n                    this.props.data.project.edges[0].node.imageFolder\r\n                  }/form.png`\r\n                )}\r\n                alt=\"Tasting Note Evaluation Form\"\r\n                className=\"img-fluid\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <h3>Identifying Problem</h3>\r\n              <h4>— current process is labour intensive and prone to error</h4>\r\n              <p>\r\n                The existing evaluation method requires a significant amount of\r\n                manual effort. The entire process of gathering, delivering\r\n                paperwork and transferring data is time consuming and fallible.\r\n                While it's challenging for the product consultant to to manage\r\n                and organize all the evaluation forms, it's a pain for the\r\n                writing team to go through piles of paper, validate the quality\r\n                of data and manually enter the notes to electronic system.{\" \"}\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col>\r\n              <h3>Crafting the Experience</h3>\r\n              <h4>\r\n                — minimize manual process by enabling product consultants to\r\n                evaluate products electronically{\" \"}\r\n              </h4>\r\n              <ul>\r\n                <li>\r\n                  <b>User Persona — </b>\r\n                  <i>understanding what user is going through </i>\r\n                </li>\r\n                <p>\r\n                  The beginning of one's worst nightmare: imagine that there are\r\n                  at least 15 products to be evaluated by 10 consultants in\r\n                  today session. This means a minimum of 150 copies of the\r\n                  evaluation forms will be generated at the end of session.\r\n                </p>\r\n\r\n                <Row className=\"justify-content-center\">\r\n                  <Col lg=\"6\">\r\n                    <img\r\n                      src={withPrefix(\r\n                        `/images/${\r\n                          this.props.data.project.edges[0].node.imageFolder\r\n                        }/persona.png`\r\n                      )}\r\n                      alt=\"Tasting Note Evaluation Form\"\r\n                      className=\"img-fluid\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n\r\n                <li>\r\n                  <b> Wireframes — </b>{\" \"}\r\n                  <i>\r\n                    creating the first low-fidelity prototype to present ideas\r\n                    &amp; get feedback from stakeholders\r\n                  </i>\r\n                </li>\r\n                <p>After reviewing user’s problem and persona, I decided to</p>\r\n                <ul>\r\n                  <li>\r\n                    propose that lists of products to be evaluated will be\r\n                    entered to the system prior to the tasting session and the\r\n                    notes will be automatically stored in the central database\r\n                    after submission.\r\n                  </li>\r\n                  <li>\r\n                    choose mobile as a platform device since it's portable and\r\n                    currently used by some of LCBO staff at the store.\r\n                  </li>\r\n                  <li>\r\n                    design a mobile application that allows product consultants\r\n                    to see list products that need to be evaluated, select and\r\n                    evaluate products then submit the forms electronically.\r\n                  </li>\r\n\r\n                  <li>\r\n                    adopt a concept of multiple choice answers to craft the user\r\n                    experience. The users will simply tab buttons that represent\r\n                    their answers before proceeding to the next question. With\r\n                    this approach, the users can focus on one task without\r\n                    having to process lots of information at once.\r\n                  </li>\r\n                  <li>use text field as a channel to receive longer input </li>\r\n                </ul>\r\n                <img\r\n                  src={withPrefix(\r\n                    `/images/${\r\n                      this.props.data.project.edges[0].node.imageFolder\r\n                    }/wireframes.jpg`\r\n                  )}\r\n                  alt=\"Tasting Note Evaluation Form\"\r\n                  className=\"img-fluid\"\r\n                />\r\n                <li>\r\n                  <b> Mockups </b>{\" \"}\r\n                </li>\r\n                <img\r\n                  src={withPrefix(\r\n                    `/images/${\r\n                      this.props.data.project.edges[0].node.imageFolder\r\n                    }/full.png`\r\n                  )}\r\n                  alt=\"Tasting Note Evaluation Form\"\r\n                  className=\"img-fluid\"\r\n                />\r\n              </ul>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </ProjectLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query TastingNoteQuery {\r\n    allProjects: allProjectsJson {\r\n      ...ProjectFields\r\n    }\r\n    project: allProjectsJson(\r\n      filter: { url: { eq: \"/projects/tasting-note\" } }\r\n    ) {\r\n      ...ProjectFields\r\n    }\r\n    mainImage: file(relativePath: { eq: \"Tasting Note/main.png\" }) {\r\n      ...MainImageSizes\r\n    }\r\n  }\r\n`;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/projects/tasting-note.tsx"],"sourceRoot":""}